{"version":3,"sources":["../../src/order/order.entity.ts"],"sourcesContent":["import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  CreateDateColumn,\r\n  OneToMany,\r\n  ManyToOne,\r\n  BeforeInsert,\r\n  BeforeUpdate,\r\n  // JoinColumn,\r\n} from 'typeorm';\r\nimport { OrderStatus } from './order.types';\r\nimport { auth } from 'src/auth/entities/auth.entity';\r\nimport { product } from 'src/product/entities/product.entity';\r\nimport { Exclude } from 'class-transformer';\r\n\r\n@Entity()\r\nexport class order {\r\n  @PrimaryGeneratedColumn()\r\n  id: string;\r\n\r\n  /** merchant/company id */\r\n  @Column({ type: 'varchar', default: '1800' })\r\n  business: string;\r\n\r\n  /** merchant address id */\r\n  @Column({ type: 'varchar', default: '1802' })\r\n  business_address: string;\r\n\r\n  /** user who prepared / owns order */\r\n  @ManyToOne(() => auth, (user) => user.orders, { nullable: true })\r\n  readyBy: auth;\r\n  // Consignee\r\n  @Column({ nullable: true })\r\n  consignee_name: string;\r\n\r\n  @Column({ nullable: true })\r\n  consignee_phone: string;\r\n\r\n  @Column({ type: 'varchar', nullable: true })\r\n  consignee_city: string;\r\n\r\n  @Column({ type: 'varchar', nullable: true })\r\n  consignee_area: string;\r\n\r\n  @Column({ nullable: true })\r\n  consignee_address: string;\r\n\r\n  // Shipment info\r\n  @Column({ type: 'varchar', nullable: true })\r\n  shipment_types: string;\r\n\r\n  @Column({ type: 'varchar', nullable: true })\r\n  quantity: string;\r\n\r\n  @Column({ name: 'cod_amount', type: 'varchar', nullable: true })\r\n  cod_amount: string;\r\n\r\n  @Column({ type: 'varchar', nullable: true })\r\n  items_description: string;\r\n\r\n  @Column({ type: 'varchar', default: '0' })\r\n  is_cod: string;\r\n\r\n  @Column({ type: 'varchar', default: '0' })\r\n  has_return: string;\r\n\r\n  @Column({ type: 'varchar', nullable: true })\r\n  return_notes: string;\r\n\r\n  @Column({ type: 'varchar', nullable: true })\r\n  notes: string;\r\n\r\n  @Column({ type: 'enum', enum: OrderStatus, default: OrderStatus.PENDING })\r\n  status: OrderStatus;\r\n\r\n  @OneToMany(() => orderitem, (item) => item.order, {\r\n    cascade: true,\r\n    eager: true,\r\n  })\r\n  items: orderitem[];\r\n\r\n  @ManyToOne(() => auth, {\r\n    nullable: true,\r\n  })\r\n  // @JoinColumn({ name: 'readyBy', referencedColumnName: 'id' })\r\n  // readyBy: auth;\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n\r\n  @Column({ type: 'numeric', nullable: true })\r\n  amount: number;\r\n\r\n  @BeforeUpdate()\r\n  calculateAmount() {\r\n    if (this.items && this.items.length > 0) {\r\n      this.amount = this.items.reduce(\r\n        (total, item) => total + Number(item.price) * Number(item.quantity),\r\n        0,\r\n      );\r\n    } else {\r\n      this.amount = 0;\r\n    }\r\n  }\r\n\r\n  // @UpdateDateColumn()\r\n  // updatedAt: Date;\r\n  // @ManyToOne('Auth', { onDelete: 'SET NULL' })\r\n  // @JoinColumn({ name: 'readyBy' })\r\n  // readyBy: any; // Type as any to avoid circular dependency issues\r\n}\r\n\r\n@Entity()\r\nexport class orderitem {\r\n  @PrimaryGeneratedColumn()\r\n  id: string;\r\n\r\n  @ManyToOne(() => order, (order) => order.items)\r\n  @Exclude()\r\n  order: order;\r\n\r\n  @ManyToOne(() => product, (product) => product.id, {\r\n    cascade: true,\r\n    onDelete: 'CASCADE',\r\n  })\r\n  @Exclude()\r\n  product: product;\r\n\r\n  @Column({ type: 'int', name: 'productId' })\r\n  productId: number;\r\n\r\n  @Column({ type: 'varchar', nullable: true })\r\n  sizeName: string;\r\n\r\n  @Column({ type: 'varchar', nullable: true })\r\n  colorName: string;\r\n\r\n  @Column({ type: 'int' })\r\n  quantity: number;\r\n\r\n  @Column({ type: 'numeric', default: '0' })\r\n  price: number;\r\n\r\n  @BeforeInsert()\r\n  @BeforeUpdate()\r\n  getPrice(): void {\r\n    const price = this.product.sizeDetails.map((size) => {\r\n      if (size.sizeName === this.sizeName) {\r\n        return size.price;\r\n      }\r\n    });\r\n    this.price = (price.find((p) => p !== undefined) as number) || 0;\r\n  }\r\n}\r\n"],"names":["order","orderitem","calculateAmount","items","length","amount","reduce","total","item","Number","price","quantity","type","default","auth","user","orders","nullable","name","enum","OrderStatus","PENDING","cascade","eager","getPrice","product","sizeDetails","map","size","sizeName","find","p","undefined","id","onDelete"],"mappings":";;;;;;;;;;;IAiBaA,KAAK;eAALA;;IAgGAC,SAAS;eAATA;;;yBAvGN;4BACqB;4BACP;+BACG;kCACA;;;;;;;;;;AAGjB,IAAA,AAAMD,QAAN,MAAMA;IA6EXE,kBAAkB;QAChB,IAAI,IAAI,CAACC,KAAK,IAAI,IAAI,CAACA,KAAK,CAACC,MAAM,GAAG,GAAG;YACvC,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,KAAK,CAACG,MAAM,CAC7B,CAACC,OAAOC,OAASD,QAAQE,OAAOD,KAAKE,KAAK,IAAID,OAAOD,KAAKG,QAAQ,GAClE;QAEJ,OAAO;YACL,IAAI,CAACN,MAAM,GAAG;QAChB;IACF;AAOF;;;;;;;QAxFYO,MAAM;QAAWC,SAAS;;;;;;QAI1BD,MAAM;QAAWC,SAAS;;;;;gCAInBC,gBAAI,GAAGC,OAASA,KAAKC,MAAM;QAAIC,UAAU;;;;;;QAGhDA,UAAU;;;;;;QAGVA,UAAU;;;;;;QAGVL,MAAM;QAAWK,UAAU;;;;;;QAG3BL,MAAM;QAAWK,UAAU;;;;;;QAG3BA,UAAU;;;;;;QAIVL,MAAM;QAAWK,UAAU;;;;;;QAG3BL,MAAM;QAAWK,UAAU;;;;;;QAG3BC,MAAM;QAAcN,MAAM;QAAWK,UAAU;;;;;;QAG/CL,MAAM;QAAWK,UAAU;;;;;;QAG3BL,MAAM;QAAWC,SAAS;;;;;;QAG1BD,MAAM;QAAWC,SAAS;;;;;;QAG1BD,MAAM;QAAWK,UAAU;;;;;;QAG3BL,MAAM;QAAWK,UAAU;;;;;;QAG3BL,MAAM;QAAQO,MAAMC,uBAAW;QAAEP,SAASO,uBAAW,CAACC,OAAO;;;;;gCAGtDpB,YAAYO,OAASA,KAAKR,KAAK;QAC9CsB,SAAS;QACTC,OAAO;;;;;gCAIQT,gBAAI;QACnBG,UAAU;;;;;;;QAOFL,MAAM;QAAWK,UAAU;;;;;;;;;;;;;AAuBhC,IAAA,AAAMhB,YAAN,MAAMA;IAgCXuB,WAAiB;QACf,MAAMd,QAAQ,IAAI,CAACe,OAAO,CAACC,WAAW,CAACC,GAAG,CAAC,CAACC;YAC1C,IAAIA,KAAKC,QAAQ,KAAK,IAAI,CAACA,QAAQ,EAAE;gBACnC,OAAOD,KAAKlB,KAAK;YACnB;QACF;QACA,IAAI,CAACA,KAAK,GAAG,AAACA,MAAMoB,IAAI,CAAC,CAACC,IAAMA,MAAMC,cAAyB;IACjE;AACF;;;;;;gCApCmBhC,QAAQA,QAAUA,MAAMG,KAAK;;;;;gCAI7BsB,sBAAO,GAAGA,UAAYA,QAAQQ,EAAE;QAC/CX,SAAS;QACTY,UAAU;;;;;;;QAKFtB,MAAM;QAAOM,MAAM;;;;;;QAGnBN,MAAM;QAAWK,UAAU;;;;;;QAG3BL,MAAM;QAAWK,UAAU;;;;;;QAG3BL,MAAM;;;;;;QAGNA,MAAM;QAAWC,SAAS;;;;;;;;;2CAKxB"}