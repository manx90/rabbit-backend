{"version":3,"sources":["../../src/order/order.entity.ts"],"sourcesContent":["import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  OneToMany,\n  ManyToOne,\n  BeforeInsert,\n  BeforeUpdate,\n  // JoinColumn,\n} from 'typeorm';\nimport { OrderStatus } from './order.types';\nimport { auth } from 'src/auth/entities/auth.entity';\nimport { product } from 'src/product/entities/product.entity';\nimport { Exclude } from 'class-transformer';\n\n@Entity()\nexport class order {\n  @PrimaryGeneratedColumn()\n  id: string;\n\n  /** merchant/company id */\n  @Column({ type: 'varchar', default: '1800' })\n  business: string;\n\n  /** merchant address id */\n  @Column({ type: 'varchar', default: '1802' })\n  business_address: string;\n\n  /** user who prepared / owns order */\n  @ManyToOne(() => auth, (user) => user.orders, { nullable: true })\n  readyBy: auth;\n  // Consignee\n  @Column({ nullable: true })\n  consignee_name: string;\n\n  @Column({ nullable: true })\n  consignee_phone: string;\n\n  @Column({ type: 'varchar', nullable: true })\n  consignee_city: string;\n\n  @Column({ type: 'varchar', nullable: true })\n  consignee_area: string;\n\n  @Column({ nullable: true })\n  consignee_address: string;\n\n  // Shipment info\n  @Column({ type: 'varchar', nullable: true })\n  shipment_types: string;\n\n  @Column({ type: 'varchar', nullable: true })\n  quantity: string;\n\n  @Column({ name: 'cod_amount', type: 'varchar', nullable: true })\n  cod_amount: string;\n\n  @Column({ type: 'varchar', nullable: true })\n  items_description: string;\n\n  @Column({ type: 'varchar', default: '0' })\n  is_cod: string;\n\n  @Column({ type: 'varchar', default: '0' })\n  has_return: string;\n\n  @Column({ type: 'varchar', nullable: true })\n  return_notes: string;\n\n  @Column({ type: 'varchar', nullable: true })\n  notes: string;\n\n  @Column({ type: 'enum', enum: OrderStatus, default: OrderStatus.PENDING })\n  status: OrderStatus;\n\n  @OneToMany(() => orderitem, (item) => item.order, {\n    cascade: true,\n    eager: true,\n  })\n  items: orderitem[];\n\n  @ManyToOne(() => auth, {\n    nullable: true,\n  })\n  // @JoinColumn({ name: 'readyBy', referencedColumnName: 'id' })\n  // readyBy: auth;\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @Column({ type: 'numeric', nullable: true })\n  amount: number;\n\n  @BeforeUpdate()\n  calculateAmount() {\n    if (this.items && this.items.length > 0) {\n      this.amount = this.items.reduce(\n        (total, item) => total + Number(item.price) * Number(item.quantity),\n        0,\n      );\n    } else {\n      this.amount = 0;\n    }\n  }\n\n  // @UpdateDateColumn()\n  // updatedAt: Date;\n  // @ManyToOne('Auth', { onDelete: 'SET NULL' })\n  // @JoinColumn({ name: 'readyBy' })\n  // readyBy: any; // Type as any to avoid circular dependency issues\n}\n\n@Entity()\nexport class orderitem {\n  @PrimaryGeneratedColumn()\n  id: string;\n\n  @ManyToOne(() => order, (order) => order.items)\n  @Exclude()\n  order: order;\n\n  @ManyToOne(() => product, (product) => product.id, {\n    cascade: true,\n    onDelete: 'CASCADE',\n  })\n  @Exclude()\n  product: product;\n\n  @Column({ type: 'int', name: 'productId' })\n  productId: number;\n\n  @Column({ type: 'varchar', nullable: true })\n  sizeName: string;\n\n  @Column({ type: 'varchar', nullable: true })\n  colorName: string;\n\n  @Column({ type: 'int' })\n  quantity: number;\n\n  @Column({ type: 'numeric', default: '0' })\n  price: number;\n\n  @BeforeInsert()\n  @BeforeUpdate()\n  getPrice(): void {\n    const price = this.product.sizeDetails.map((size) => {\n      if (size.sizeName === this.sizeName) {\n        return size.price;\n      }\n    });\n    this.price = (price.find((p) => p !== undefined) as number) || 0;\n  }\n}\n"],"names":["order","orderitem","calculateAmount","items","length","amount","reduce","total","item","Number","price","quantity","type","default","auth","user","orders","nullable","name","enum","OrderStatus","PENDING","cascade","eager","getPrice","product","sizeDetails","map","size","sizeName","find","p","undefined","id","onDelete"],"mappings":";;;;;;;;;;;IAiBaA,KAAK;eAALA;;IAgGAC,SAAS;eAATA;;;yBAvGN;4BACqB;4BACP;+BACG;kCACA;;;;;;;;;;AAGjB,IAAA,AAAMD,QAAN,MAAMA;IA6EXE,kBAAkB;QAChB,IAAI,IAAI,CAACC,KAAK,IAAI,IAAI,CAACA,KAAK,CAACC,MAAM,GAAG,GAAG;YACvC,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,KAAK,CAACG,MAAM,CAC7B,CAACC,OAAOC,OAASD,QAAQE,OAAOD,KAAKE,KAAK,IAAID,OAAOD,KAAKG,QAAQ,GAClE;QAEJ,OAAO;YACL,IAAI,CAACN,MAAM,GAAG;QAChB;IACF;AAOF;;;;;;;QAxFYO,MAAM;QAAWC,SAAS;;;;;;QAI1BD,MAAM;QAAWC,SAAS;;;;;gCAInBC,gBAAI,GAAGC,OAASA,KAAKC,MAAM;QAAIC,UAAU;;;;;;QAGhDA,UAAU;;;;;;QAGVA,UAAU;;;;;;QAGVL,MAAM;QAAWK,UAAU;;;;;;QAG3BL,MAAM;QAAWK,UAAU;;;;;;QAG3BA,UAAU;;;;;;QAIVL,MAAM;QAAWK,UAAU;;;;;;QAG3BL,MAAM;QAAWK,UAAU;;;;;;QAG3BC,MAAM;QAAcN,MAAM;QAAWK,UAAU;;;;;;QAG/CL,MAAM;QAAWK,UAAU;;;;;;QAG3BL,MAAM;QAAWC,SAAS;;;;;;QAG1BD,MAAM;QAAWC,SAAS;;;;;;QAG1BD,MAAM;QAAWK,UAAU;;;;;;QAG3BL,MAAM;QAAWK,UAAU;;;;;;QAG3BL,MAAM;QAAQO,MAAMC,uBAAW;QAAEP,SAASO,uBAAW,CAACC,OAAO;;;;;gCAGtDpB,YAAYO,OAASA,KAAKR,KAAK;QAC9CsB,SAAS;QACTC,OAAO;;;;;gCAIQT,gBAAI;QACnBG,UAAU;;;;;;;QAOFL,MAAM;QAAWK,UAAU;;;;;;;;;;;;;AAuBhC,IAAA,AAAMhB,YAAN,MAAMA;IAgCXuB,WAAiB;QACf,MAAMd,QAAQ,IAAI,CAACe,OAAO,CAACC,WAAW,CAACC,GAAG,CAAC,CAACC;YAC1C,IAAIA,KAAKC,QAAQ,KAAK,IAAI,CAACA,QAAQ,EAAE;gBACnC,OAAOD,KAAKlB,KAAK;YACnB;QACF;QACA,IAAI,CAACA,KAAK,GAAG,AAACA,MAAMoB,IAAI,CAAC,CAACC,IAAMA,MAAMC,cAAyB;IACjE;AACF;;;;;;gCApCmBhC,QAAQA,QAAUA,MAAMG,KAAK;;;;;gCAI7BsB,sBAAO,GAAGA,UAAYA,QAAQQ,EAAE;QAC/CX,SAAS;QACTY,UAAU;;;;;;;QAKFtB,MAAM;QAAOM,MAAM;;;;;;QAGnBN,MAAM;QAAWK,UAAU;;;;;;QAG3BL,MAAM;QAAWK,UAAU;;;;;;QAG3BL,MAAM;;;;;;QAGNA,MAAM;QAAWC,SAAS;;;;;;;;;2CAKxB"}