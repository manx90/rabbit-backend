{"version":3,"sources":["../../src/order/order.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { CreateOrderDto } from './order.dto';\nimport { OrderRepository } from './order.repository';\nimport { order } from './order.entity';\nimport { UpdateOrderDto } from './order.dto';\nimport { OrderStatus } from './order.types';\n// import { Auth } from '../auth/auth.entity';\n\n@Injectable()\nexport class OrderService {\n  constructor(private readonly orderRepository: OrderRepository) {}\n\n  createOrder(dto: CreateOrderDto): Promise<order> {\n    return this.orderRepository.createOrder(dto);\n  }\n  updateOrder(id: string, dto: UpdateOrderDto): Promise<order> {\n    return this.orderRepository.updateOrder(id, dto);\n  }\n  getAllOrders(): Promise<order[]> {\n    return this.orderRepository.getAllOrders();\n  }\n\n  getOrderById(id: string): Promise<order> {\n    return this.orderRepository.getOrderById(id);\n  }\n\n  deleteOrder(id: string): Promise<void> {\n    return this.orderRepository.deleteOrder(id);\n  }\n\n  updateOrderStatusToProcessing(id: string): Promise<any> {\n    return this.orderRepository.updateOrderStatusToProcessing(id);\n  }\n\n  updateOrderStatusToDelivered(id: string): Promise<void> {\n    return this.orderRepository.updateOrderStatusToDelivered(id);\n  }\n\n  updateOrderStatusToShipped(id: string): Promise<void> {\n    return this.orderRepository.updateOrderStatusToShipped(id);\n  }\n\n  updateOrderStatusToCancelled(id: string): Promise<void> {\n    return this.orderRepository.updateOrderStatusToCancelled(id);\n  }\n\n  getOrdersByStatus(status: OrderStatus): Promise<order[]> {\n    return this.orderRepository.getOrdersByStatus(status);\n  }\n\n  addReadyBy(id: string, readyById: string): Promise<order> {\n    return this.orderRepository.addReadyBy(id, readyById);\n  }\n\n  deleteAllOrders(): Promise<any> {\n    return this.orderRepository.deleteAllOrders();\n  }\n\n  numberOfOrders(): Promise<number> {\n    return this.orderRepository.length();\n  }\n}\n"],"names":["OrderService","createOrder","dto","orderRepository","updateOrder","id","getAllOrders","getOrderById","deleteOrder","updateOrderStatusToProcessing","updateOrderStatusToDelivered","updateOrderStatusToShipped","updateOrderStatusToCancelled","getOrdersByStatus","status","addReadyBy","readyById","deleteAllOrders","numberOfOrders","length","constructor"],"mappings":";;;;+BASaA;;;eAAAA;;;wBATc;iCAEK;;;;;;;;;;AAOzB,IAAA,AAAMA,eAAN,MAAMA;IAGXC,YAAYC,GAAmB,EAAkB;QAC/C,OAAO,IAAI,CAACC,eAAe,CAACF,WAAW,CAACC;IAC1C;IACAE,YAAYC,EAAU,EAAEH,GAAmB,EAAkB;QAC3D,OAAO,IAAI,CAACC,eAAe,CAACC,WAAW,CAACC,IAAIH;IAC9C;IACAI,eAAiC;QAC/B,OAAO,IAAI,CAACH,eAAe,CAACG,YAAY;IAC1C;IAEAC,aAAaF,EAAU,EAAkB;QACvC,OAAO,IAAI,CAACF,eAAe,CAACI,YAAY,CAACF;IAC3C;IAEAG,YAAYH,EAAU,EAAiB;QACrC,OAAO,IAAI,CAACF,eAAe,CAACK,WAAW,CAACH;IAC1C;IAEAI,8BAA8BJ,EAAU,EAAgB;QACtD,OAAO,IAAI,CAACF,eAAe,CAACM,6BAA6B,CAACJ;IAC5D;IAEAK,6BAA6BL,EAAU,EAAiB;QACtD,OAAO,IAAI,CAACF,eAAe,CAACO,4BAA4B,CAACL;IAC3D;IAEAM,2BAA2BN,EAAU,EAAiB;QACpD,OAAO,IAAI,CAACF,eAAe,CAACQ,0BAA0B,CAACN;IACzD;IAEAO,6BAA6BP,EAAU,EAAiB;QACtD,OAAO,IAAI,CAACF,eAAe,CAACS,4BAA4B,CAACP;IAC3D;IAEAQ,kBAAkBC,MAAmB,EAAoB;QACvD,OAAO,IAAI,CAACX,eAAe,CAACU,iBAAiB,CAACC;IAChD;IAEAC,WAAWV,EAAU,EAAEW,SAAiB,EAAkB;QACxD,OAAO,IAAI,CAACb,eAAe,CAACY,UAAU,CAACV,IAAIW;IAC7C;IAEAC,kBAAgC;QAC9B,OAAO,IAAI,CAACd,eAAe,CAACc,eAAe;IAC7C;IAEAC,iBAAkC;QAChC,OAAO,IAAI,CAACf,eAAe,CAACgB,MAAM;IACpC;IAlDAC,YAAY,AAAiBjB,eAAgC,CAAE;aAAlCA,kBAAAA;IAAmC;AAmDlE"}