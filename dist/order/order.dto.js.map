{"version":3,"sources":["../../src/order/order.dto.ts"],"sourcesContent":["// order/order.dto.ts\nimport {\n  IsArray,\n  // IsNotEmpty,\n  IsNumber,\n  IsString,\n  ValidateNested,\n  // IsIn,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class OrderItemDto {\n  // @IsNotEmpty()\n  @IsNumber()\n  productId: number;\n\n  // @IsNotEmpty()\n  @IsString()\n  sizeName: string;\n\n  // @IsNotEmpty()\n  @IsString()\n  colorName: string;\n\n  // @IsNotEmpty()\n  @IsNumber()\n  quantity: number;\n}\n\nexport class CreateOrderDto {\n  // @IsNotEmpty()\n  @IsString()\n  consignee_name: string;\n\n  // @IsNotEmpty()\n  @IsString()\n  consignee_phone: string;\n\n  // @IsNotEmpty()\n  @IsString()\n  consignee_city: string;\n\n  // @IsNotEmpty()\n  @IsString()\n  consignee_area: string;\n\n  // @IsNotEmpty()\n  @IsString()\n  consignee_address: string;\n\n  // Shipment\n  // @IsNotEmpty()\n  @IsString()\n  shipment_types: string;\n\n  // @IsNotEmpty()\n  @IsString()\n  quantity: string;\n\n  // @IsNotEmpty()\n  @IsString()\n  items_description: string;\n\n  // @IsNotEmpty()\n  @IsString()\n  is_cod: string;\n\n  // @IsNotEmpty()\n  @IsString()\n  cod_amount: string;\n\n  // @IsNotEmpty()\n  @IsString()\n  has_return: string;\n\n  @IsString()\n  return_notes: string;\n\n  @IsString()\n  notes: string;\n\n  // Items\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => OrderItemDto)\n  items: OrderItemDto[];\n}\n\nexport class UpdateOrderDto extends CreateOrderDto {}\n"],"names":["CreateOrderDto","OrderItemDto","UpdateOrderDto","each"],"mappings":"AAAA,qBAAqB;;;;;;;;;;;;IA6BRA,cAAc;eAAdA;;IAlBAC,YAAY;eAAZA;;IA6EAC,cAAc;eAAdA;;;gCAhFN;kCACc;;;;;;;;;;AAEd,IAAA,AAAMD,eAAN,MAAMA;AAgBb;;;;;;;;;;;;;;;;;AAEO,IAAA,AAAMD,iBAAN,MAAMA;AAyDb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAHoBG,MAAM;;oCACZF;;;AAIP,IAAA,AAAMC,iBAAN,MAAMA,uBAAuBF;AAAgB"}