{"version":3,"sources":["../../src/file-storage/file-storage.module.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport { Module } from '@nestjs/common';\nimport { FileStorageService } from './file-storage.service';\nimport { FileStorageController } from './file-storage.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { extname, join } from 'path';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { existsSync, mkdirSync } from 'fs';\n\n@Module({\n  imports: [\n    MulterModule.register({\n      storage: diskStorage({\n        destination: (req, file, cb) => {\n          // Get product name from the request body\n          const productName = req.body?.createProductDto ? \n            JSON.parse(req.body.createProductDto).name.replace(/\\s+/g, '_').toLowerCase() : \n            'temp';\n\n          // Create base uploads directory if it doesn't exist\n          const baseDir = './uploads';\n          if (!existsSync(baseDir)) {\n            mkdirSync(baseDir, { recursive: true });\n          }\n\n          // Create product-specific directory\n          const productDir = join(baseDir, 'products', productName);\n          if (!existsSync(productDir)) {\n            mkdirSync(productDir, { recursive: true });\n          }\n\n          // Create subdirectories based on file field name\n          const fieldName = file.fieldname;\n          let uploadPath = productDir;\n\n          if (fieldName === 'imgCover') {\n            uploadPath = join(productDir, 'cover');\n          } else if (fieldName === 'imgSizeChart') {\n            uploadPath = join(productDir, 'sizechart');\n          } else if (fieldName === 'imgMeasure') {\n            uploadPath = join(productDir, 'measure');\n          } else if (fieldName === 'imgColors') {\n            uploadPath = join(productDir, 'colors');\n          } else if (fieldName === 'images') {\n            uploadPath = join(productDir, 'images');\n          }\n\n          if (!existsSync(uploadPath)) {\n            mkdirSync(uploadPath, { recursive: true });\n          }\n\n          cb(null, uploadPath);\n        },\n        filename: (req, file, cb) => {\n          const uniqueSuffix = uuidv4();\n          const ext = extname(file.originalname);\n          cb(null, `${uniqueSuffix}${ext}`);\n        },\n      }),\n      limits: {\n        fileSize: 10 * 1024 * 1024, // 10MB limit\n      },\n    }),\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    ServeStaticModule.forRoot({\n      rootPath: join(process.cwd(), 'uploads'),\n      serveRoot: '/uploads',\n    }),\n  ],\n  controllers: [FileStorageController],\n  providers: [FileStorageService],\n  exports: [FileStorageService],\n})\nexport class FileStorageModule {}\n"],"names":["FileStorageModule","imports","MulterModule","register","storage","diskStorage","destination","req","file","cb","productName","body","createProductDto","JSON","parse","name","replace","toLowerCase","baseDir","existsSync","mkdirSync","recursive","productDir","join","fieldName","fieldname","uploadPath","filename","uniqueSuffix","uuidv4","ext","extname","originalname","limits","fileSize","ServeStaticModule","forRoot","rootPath","process","cwd","serveRoot","controllers","FileStorageController","providers","FileStorageService","exports"],"mappings":"AAAA,oDAAoD;;;;+BA2EvCA;;;eAAAA;;;wBA1EU;oCACY;uCACG;iCACT;wBACD;sBACE;sBACD;6BACK;oBACI;;;;;;;AAkE/B,IAAA,AAAMA,oBAAN,MAAMA;AAAmB;;;QA/D9BC,SAAS;YACPC,6BAAY,CAACC,QAAQ,CAAC;gBACpBC,SAASC,IAAAA,mBAAW,EAAC;oBACnBC,aAAa,CAACC,KAAKC,MAAMC;4BAEHF;wBADpB,yCAAyC;wBACzC,MAAMG,cAAcH,EAAAA,YAAAA,IAAII,IAAI,cAARJ,gCAAAA,UAAUK,gBAAgB,IAC5CC,KAAKC,KAAK,CAACP,IAAII,IAAI,CAACC,gBAAgB,EAAEG,IAAI,CAACC,OAAO,CAAC,QAAQ,KAAKC,WAAW,KAC3E;wBAEF,oDAAoD;wBACpD,MAAMC,UAAU;wBAChB,IAAI,CAACC,IAAAA,cAAU,EAACD,UAAU;4BACxBE,IAAAA,aAAS,EAACF,SAAS;gCAAEG,WAAW;4BAAK;wBACvC;wBAEA,oCAAoC;wBACpC,MAAMC,aAAaC,IAAAA,UAAI,EAACL,SAAS,YAAYR;wBAC7C,IAAI,CAACS,IAAAA,cAAU,EAACG,aAAa;4BAC3BF,IAAAA,aAAS,EAACE,YAAY;gCAAED,WAAW;4BAAK;wBAC1C;wBAEA,iDAAiD;wBACjD,MAAMG,YAAYhB,KAAKiB,SAAS;wBAChC,IAAIC,aAAaJ;wBAEjB,IAAIE,cAAc,YAAY;4BAC5BE,aAAaH,IAAAA,UAAI,EAACD,YAAY;wBAChC,OAAO,IAAIE,cAAc,gBAAgB;4BACvCE,aAAaH,IAAAA,UAAI,EAACD,YAAY;wBAChC,OAAO,IAAIE,cAAc,cAAc;4BACrCE,aAAaH,IAAAA,UAAI,EAACD,YAAY;wBAChC,OAAO,IAAIE,cAAc,aAAa;4BACpCE,aAAaH,IAAAA,UAAI,EAACD,YAAY;wBAChC,OAAO,IAAIE,cAAc,UAAU;4BACjCE,aAAaH,IAAAA,UAAI,EAACD,YAAY;wBAChC;wBAEA,IAAI,CAACH,IAAAA,cAAU,EAACO,aAAa;4BAC3BN,IAAAA,aAAS,EAACM,YAAY;gCAAEL,WAAW;4BAAK;wBAC1C;wBAEAZ,GAAG,MAAMiB;oBACX;oBACAC,UAAU,CAACpB,KAAKC,MAAMC;wBACpB,MAAMmB,eAAeC,IAAAA,QAAM;wBAC3B,MAAMC,MAAMC,IAAAA,aAAO,EAACvB,KAAKwB,YAAY;wBACrCvB,GAAG,MAAM,GAAGmB,eAAeE,KAAK;oBAClC;gBACF;gBACAG,QAAQ;oBACNC,UAAU,KAAK,OAAO;gBACxB;YACF;YACA,sEAAsE;YACtEC,8BAAiB,CAACC,OAAO,CAAC;gBACxBC,UAAUd,IAAAA,UAAI,EAACe,QAAQC,GAAG,IAAI;gBAC9BC,WAAW;YACb;SACD;QACDC,aAAa;YAACC,4CAAqB;SAAC;QACpCC,WAAW;YAACC,sCAAkB;SAAC;QAC/BC,SAAS;YAACD,sCAAkB;SAAC"}