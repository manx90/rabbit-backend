{"version":3,"sources":["../../src/product/category.controller.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-member-access */\r\nimport {\r\n  Controller,\r\n  Get,\r\n  Post,\r\n  Put,\r\n  Delete,\r\n  Body,\r\n  Param,\r\n  HttpException,\r\n  HttpStatus,\r\n  HttpCode,\r\n  UseGuards,\r\n} from '@nestjs/common';\r\nimport { CategoryService } from './category.service';\r\nimport { JwtAuthGuard } from '../common/guards/jwt-auth.guard';\r\nimport { RolesGuard } from '../common/guards/roles.guard';\r\nimport { Roles } from '../common/decorators/roles.decorator';\r\nimport { Role } from '../common/constants/roles.constant';\r\nimport {\r\n  CreateCategoryDto,\r\n  UpdateCategoryDto,\r\n  CreateSubCategoryDto,\r\n  UpdateSubCategoryDto,\r\n  CategoryResponseDto,\r\n  SubCategoryResponseDto,\r\n} from './dto/category.dto';\r\n\r\n@Controller('category')\r\nexport class CategoryController {\r\n  constructor(private readonly categoryService: CategoryService) {}\r\n  @Get('subcategory')\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin, Role.SuperAdmin)\r\n  async getSubCategories() {\r\n    return this.categoryService.getSubCategories();\r\n  }\r\n\r\n  @Get()\r\n  async getAllCategories(): Promise<CategoryResponseDto[]> {\r\n    return this.categoryService.getAllCategories();\r\n  }\r\n\r\n  @Post()\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin, Role.SuperAdmin)\r\n  @HttpCode(HttpStatus.CREATED)\r\n  async createCategory(\r\n    @Body() dto: CreateCategoryDto,\r\n  ): Promise<{ message: string; data: CategoryResponseDto }> {\r\n    try {\r\n      const result = await this.categoryService.createCategory(dto);\r\n      return { message: 'Category created successfully', data: result };\r\n    } catch (error: any) {\r\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\r\n    }\r\n  }\r\n\r\n  @Get(':id')\r\n  async getCategoryById(@Param('id') id: string): Promise<CategoryResponseDto> {\r\n    try {\r\n      return await this.categoryService.getCategoryById(Number(id));\r\n    } catch (error: any) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_FOUND);\r\n    }\r\n  }\r\n\r\n  @Put(':id')\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin, Role.SuperAdmin)\r\n  async updateCategory(\r\n    @Param('id') id: string,\r\n    @Body() dto: UpdateCategoryDto,\r\n  ): Promise<CategoryResponseDto> {\r\n    try {\r\n      return await this.categoryService.updateCategory(Number(id), dto);\r\n    } catch (error: any) {\r\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\r\n    }\r\n  }\r\n\r\n  @Post('subcategory')\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin, Role.SuperAdmin)\r\n  @HttpCode(HttpStatus.CREATED)\r\n  async createSubCategory(\r\n    @Body() dto: CreateSubCategoryDto,\r\n  ): Promise<{ message: string; data: SubCategoryResponseDto }> {\r\n    try {\r\n      const result = await this.categoryService.createSubCategory(dto);\r\n      return { message: 'SubCategory created successfully', data: result };\r\n    } catch (error: any) {\r\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\r\n    }\r\n  }\r\n\r\n  @Put('subcategory/:id')\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin, Role.SuperAdmin)\r\n  async updateSubCategory(\r\n    @Param('id') id: string,\r\n    @Body() dto: UpdateSubCategoryDto,\r\n  ): Promise<SubCategoryResponseDto> {\r\n    try {\r\n      return await this.categoryService.updateSubCategory(Number(id), dto);\r\n    } catch (error: any) {\r\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\r\n    }\r\n  }\r\n\r\n  @Delete()\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin, Role.SuperAdmin)\r\n  async deleteAllCategories() {\r\n    await this.categoryService.deleteAll();\r\n    return { message: 'All categories deleted successfully' };\r\n  }\r\n\r\n  @Delete(':id')\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin, Role.SuperAdmin)\r\n  async deleteCategory(@Param('id') id: string): Promise<{ message: string }> {\r\n    try {\r\n      await this.categoryService.deleteCategory(Number(id));\r\n      return { message: 'Category deleted successfully' };\r\n    } catch (error: any) {\r\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\r\n    }\r\n  }\r\n\r\n  @Delete('subcategory/:id')\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.Admin, Role.SuperAdmin)\r\n  async deleteSubCategory(\r\n    @Param('id') id: string,\r\n  ): Promise<{ message: string }> {\r\n    try {\r\n      await this.categoryService.deleteSubCategory(Number(id));\r\n      return { message: 'SubCategory deleted successfully' };\r\n    } catch (error: any) {\r\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\r\n    }\r\n  }\r\n}\r\n"],"names":["CategoryController","getSubCategories","categoryService","getAllCategories","createCategory","dto","result","message","data","error","HttpException","HttpStatus","BAD_REQUEST","getCategoryById","id","Number","NOT_FOUND","updateCategory","createSubCategory","updateSubCategory","deleteAllCategories","deleteAll","deleteCategory","deleteSubCategory","constructor","Admin","SuperAdmin","CREATED"],"mappings":"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"}