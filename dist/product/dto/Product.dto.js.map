{"version":3,"sources":["../../../src/product/dto/Product.dto.ts"],"sourcesContent":["import {\n  IsString,\n  IsNotEmpty,\n  IsNumber,\n  IsBoolean,\n  IsOptional,\n  IsArray,\n  IsEnum,\n  ValidateNested,\n  Min,\n  IsPositive,\n  ArrayMinSize,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PublishState } from '../../common/interfaces/entity.interface';\n\n/* ---------- nested DTOs ---------- */\n\nexport class ColorQuantityDto {\n  @ApiProperty({ example: 'أحمر' })\n  @IsString()\n  @IsNotEmpty()\n  colorName: string;\n\n  @ApiProperty({ example: 12, minimum: 0 })\n  @IsNumber()\n  @Min(0)\n  quantity: number;\n}\n\nexport class SizeDetailDto {\n  @ApiProperty({ example: 'XL' })\n  @IsString()\n  @IsNotEmpty()\n  sizeName: string;\n\n  @ApiProperty({ example: 35000 })\n  @IsNumber()\n  @IsPositive()\n  price: number;\n\n  @ApiProperty({\n    description: 'Colors and their stock for this size',\n    type: [ColorQuantityDto],\n    minItems: 1,\n  })\n  @IsArray()\n  @ArrayMinSize(1)\n  @ValidateNested({ each: true })\n  @Type(() => ColorQuantityDto)\n  quantities: ColorQuantityDto[];\n}\n\nexport class ColorDetailDto {\n  @ApiProperty({ example: 'أحمر' })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiPropertyOptional({ example: 'red-color.jpg' })\n  @IsOptional()\n  @IsString()\n  imgColor?: string;\n}\n\n/* ---------- main DTO ---------- */\n\nexport class CreateProductDto {\n  @ApiProperty({ example: 'تيشيرت رجالي' })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({ example: 'تيشيرت قطن عالي الجودة ومريح' })\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n\n  @ApiProperty({ example: 1 })\n  @IsNumber()\n  categoryId: number;\n\n  @ApiProperty({ example: 2 })\n  @IsNumber()\n  subCategoryId: number;\n\n  @ApiPropertyOptional({ enum: PublishState, default: PublishState.DRAFT })\n  @IsEnum(PublishState)\n  @IsOptional()\n  publishState?: PublishState = PublishState.DRAFT;\n\n  /* sizes & colors */\n  @ApiProperty({\n    description: 'List of sizes with their prices and color quantities',\n    type: [SizeDetailDto],\n    minItems: 1,\n  })\n  @IsArray()\n  @ArrayMinSize(1)\n  @ValidateNested({ each: true })\n  @Type(() => SizeDetailDto)\n  sizes: SizeDetailDto[];\n\n  /** optional convenience list if you want to expose colors separately */\n  @ApiPropertyOptional({\n    description: 'Flat list of colors (redundant, but handy for front-end)',\n    type: [ColorDetailDto],\n  })\n  @IsArray()\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @Type(() => ColorDetailDto)\n  colors?: ColorDetailDto[];\n\n  /* UX flags */\n  @ApiPropertyOptional({ default: false })\n  @IsBoolean()\n  @IsOptional()\n  isActive?: boolean = false;\n  @ApiPropertyOptional({ default: false })\n  @IsBoolean()\n  @IsOptional()\n  isFeatured?: boolean = false;\n  @ApiPropertyOptional({ default: false })\n  @IsBoolean()\n  @IsOptional()\n  isTrending?: boolean = false;\n  @ApiPropertyOptional({ default: true })\n  @IsBoolean()\n  @IsOptional()\n  isNew?: boolean = true;\n  @ApiPropertyOptional({ default: false })\n  @IsBoolean()\n  @IsOptional()\n  isBestSeller?: boolean = false;\n  imgCover: string;\n  imgSizeChart: string;\n  imgMeasure: string;\n  images: string[];\n}\n\nexport class UpdateProductDto {\n  @IsOptional()\n  @IsString()\n  name?: string;\n\n  @IsOptional()\n  @IsString()\n  description?: string;\n\n  @IsOptional()\n  @IsEnum(PublishState)\n  publishState?: PublishState;\n\n  @IsOptional()\n  @IsNumber()\n  categoryId?: number;\n\n  @IsOptional()\n  @IsNumber()\n  subCategoryId?: number;\n\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => SizeDetailDto)\n  sizes?: SizeDetailDto[];\n\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => ColorDetailDto)\n  colors?: ColorDetailDto[];\n\n  @IsOptional()\n  @IsBoolean()\n  isActive?: boolean;\n  @IsOptional()\n  @IsBoolean()\n  isFeatured?: boolean;\n\n  @IsOptional()\n  @IsBoolean()\n  isTrending?: boolean;\n\n  @IsOptional()\n  @IsBoolean()\n  isNew?: boolean;\n\n  @IsOptional()\n  @IsBoolean()\n  isBestSeller?: boolean;\n}\n"],"names":["ColorDetailDto","ColorQuantityDto","CreateProductDto","SizeDetailDto","UpdateProductDto","example","minimum","description","type","minItems","each","publishState","PublishState","DRAFT","isActive","isFeatured","isTrending","isNew","isBestSeller","enum","default"],"mappings":";;;;;;;;;;;IAsDaA,cAAc;eAAdA;;IAnCAC,gBAAgB;eAAhBA;;IAiDAC,gBAAgB;eAAhBA;;IArCAC,aAAa;eAAbA;;IA+GAC,gBAAgB;eAAhBA;;;gCAlIN;kCACc;yBAC4B;iCACpB;;;;;;;;;;AAItB,IAAA,AAAMH,mBAAN,MAAMA;AAUb;;;QATiBI,SAAS;;;;;;;;QAKTA,SAAS;QAAIC,SAAS;;;;;;AAMhC,IAAA,AAAMH,gBAAN,MAAMA;AAqBb;;;QApBiBE,SAAS;;;;;;;;QAKTA,SAAS;;;;;;;;QAMtBE,aAAa;QACbC,MAAM;YAACP;SAAiB;QACxBQ,UAAU;;;;;QAIMC,MAAM;;oCACZT;;;AAIP,IAAA,AAAMD,iBAAN,MAAMA;AAUb;;;QATiBK,SAAS;;;;;;;;QAKDA,SAAS;;;;;;AAQ3B,IAAA,AAAMH,mBAAN,MAAMA;;aAsBXS,eAA8BC,6BAAY,CAACC,KAAK;QAyBhD,YAAY,QAIZC,WAAqB;aAIrBC,aAAuB;aAIvBC,aAAuB;aAIvBC,QAAkB;aAIlBC,eAAyB;;AAK3B;;;QAvEiBb,SAAS;;;;;;;;QAKTA,SAAS;;;;;;;;QAKTA,SAAS;;;;;;;QAITA,SAAS;;;;;;;QAIDc,MAAMP,6BAAY;QAAEQ,SAASR,6BAAY,CAACC,KAAK;;;;;;;;QAOpEN,aAAa;QACbC,MAAM;YAACL;SAAc;QACrBM,UAAU;;;;;QAIMC,MAAM;;oCACZP;;;;;QAKVI,aAAa;QACbC,MAAM;YAACR;SAAe;;;;;QAINU,MAAM;;oCACZV;;;;;QAIWoB,SAAS;;;;;;;;QAITA,SAAS;;;;;;;;QAITA,SAAS;;;;;;;;QAITA,SAAS;;;;;;;;QAITA,SAAS;;;;;;AAU3B,IAAA,AAAMhB,mBAAN,MAAMA;AAmDb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA5BoBM,MAAM;;oCACZP;;;;;;;QAKMO,MAAM;;oCACZV"}