{"version":3,"sources":["../../../src/common/strategies/local.strategy.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from '../../auth/auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super({ usernameField: 'username', passwordField: 'password' });\n  }\n\n  async validate(username: string, password: string) {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) throw new UnauthorizedException('Invalid credentials');\n    return user;\n  }\n}\n"],"names":["LocalStrategy","PassportStrategy","Strategy","validate","username","password","user","authService","validateUser","UnauthorizedException","constructor","usernameField","passwordField"],"mappings":"AAAA,oDAAoD;;;;+BAOvCA;;;eAAAA;;;wBANqC;0BACjB;+BACR;6BACG;;;;;;;;;;AAGrB,IAAA,AAAMA,gBAAN,MAAMA,sBAAsBC,IAAAA,0BAAgB,EAACC,uBAAQ;IAK1D,MAAMC,SAASC,QAAgB,EAAEC,QAAgB,EAAE;QACjD,MAAMC,OAAO,MAAM,IAAI,CAACC,WAAW,CAACC,YAAY,CAACJ,UAAUC;QAC3D,IAAI,CAACC,MAAM,MAAM,IAAIG,6BAAqB,CAAC;QAC3C,OAAOH;IACT;IARAI,YAAY,AAAiBH,WAAwB,CAAE;QACrD,KAAK,CAAC;YAAEI,eAAe;YAAYC,eAAe;QAAW,SADlCL,cAAAA;IAE7B;AAOF"}