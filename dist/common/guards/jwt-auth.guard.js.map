{"version":3,"sources":["../../../src/common/guards/jwt-auth.guard.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-call */\r\n/* eslint-disable @typescript-eslint/no-unsafe-return */\r\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\nimport { Injectable, ExecutionContext } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\n\r\n@Injectable()\r\nexport class JwtAuthGuard extends AuthGuard('jwt') {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  async canActivate(context: ExecutionContext): Promise<boolean> {\r\n    // Try to authenticate with JWT\r\n    try {\r\n      return (await super.canActivate(context)) as boolean;\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    } catch (_) {\r\n      // If JWT authentication fails, just return true for now\r\n      // We'll handle guest tokens in a different way\r\n      return true;\r\n    }\r\n  }\r\n}\r\n"],"names":["JwtAuthGuard","AuthGuard","canActivate","context","_","constructor"],"mappings":"AAAA,oDAAoD,GACpD,sDAAsD,GACtD,0DAA0D;;;;+BAK7CA;;;eAAAA;;;wBAJgC;0BACnB;;;;;;;;;;AAGnB,IAAA,AAAMA,eAAN,MAAMA,qBAAqBC,IAAAA,mBAAS,EAAC;IAK1C,MAAMC,YAAYC,OAAyB,EAAoB;QAC7D,+BAA+B;QAC/B,IAAI;YACF,OAAQ,MAAM,KAAK,CAACD,YAAYC;QAChC,6DAA6D;QAC/D,EAAE,OAAOC,GAAG;YACV,wDAAwD;YACxD,+CAA+C;YAC/C,OAAO;QACT;IACF;IAdAC,aAAc;QACZ,KAAK;IACP;AAaF"}