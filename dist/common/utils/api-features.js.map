{"version":3,"sources":["../../../src/common/utils/api-features.ts"],"sourcesContent":["import { ObjectLiteral, SelectQueryBuilder } from 'typeorm';\nimport { ParsedQs } from 'qs';\n\nexport class ApiFeatures<T extends ObjectLiteral> {\n  /**\n   * Returns the current pagination information\n   * @returns Object containing page and limit\n   */\n  getPaginationInfo(): { page: number; limit: number } {\n    return {\n      page: this.page,\n      limit: this.limit,\n    };\n  }\n  private page: number;\n  private limit: number;\n  private skip: number;\n\n  constructor(\n    private queryBuilder: SelectQueryBuilder<T>,\n    private queryString: ParsedQs,\n  ) {\n    this.page = 1;\n    this.limit = 10;\n    this.skip = 0;\n  }\n\n  filter(): this {\n    const queryObj = { ...this.queryString };\n    const excludedFields = ['page', 'sort', 'limit', 'fields'];\n    excludedFields.forEach((el) => delete queryObj[el]);\n\n    // Advanced filtering\n    let queryStr = JSON.stringify(queryObj);\n    queryStr = queryStr.replace(\n      /\\b(gte|gt|lte|lt|ne)\\b/g,\n      (match) => `$${match}`,\n    );\n    const parsedQuery = JSON.parse(queryStr) as Record<string, any>;\n\n    Object.keys(parsedQuery).forEach((key) => {\n      const value = parsedQuery[key] as Record<string, any>;\n      if (typeof value === 'object' && value !== null) {\n        Object.keys(value).forEach((operator) => {\n          const operatorValue = value[operator] as Record<string, any>;\n          switch (operator) {\n            case '$gte':\n              this.queryBuilder.andWhere(`${key} >= :${key}Gte`, {\n                [`${key}Gte`]: operatorValue,\n              });\n              break;\n            case '$gt':\n              this.queryBuilder.andWhere(`${key} > :${key}Gt`, {\n                [`${key}Gt`]: operatorValue,\n              });\n              break;\n            case '$lte':\n              this.queryBuilder.andWhere(`${key} <= :${key}Lte`, {\n                [`${key}Lte`]: operatorValue,\n              });\n              break;\n            case '$lt':\n              this.queryBuilder.andWhere(`${key} < :${key}Lt`, {\n                [`${key}Lt`]: operatorValue,\n              });\n              break;\n            case '$ne':\n              this.queryBuilder.andWhere(`${key} != :${key}Ne`, {\n                [`${key}Ne`]: operatorValue,\n              });\n              break;\n          }\n        });\n      } else {\n        this.queryBuilder.andWhere(`${key} = :${key}`, { [key]: value });\n      }\n    });\n\n    return this;\n  }\n\n  sort(): this {\n    if (this.queryString.sort) {\n      const sortBy = (this.queryString.sort as string)\n        .split(',')\n        .map((field) => {\n          const direction = field.startsWith('-') ? 'DESC' : 'ASC';\n          const actualField = field.startsWith('-')\n            ? field.substring(1)\n            : field;\n          return `product.${actualField} ${direction}`;\n        })\n        .join(', ');\n\n      this.queryBuilder.orderBy(sortBy);\n    } else {\n      // Default sort by creation date\n      this.queryBuilder.orderBy('product.createdAt', 'DESC');\n    }\n\n    return this;\n  }\n\n  limitFields(): this {\n    if (this.queryString.fields) {\n      const fields = (this.queryString.fields as string)\n        .split(',')\n        .map((field) => `product.${field}`);\n\n      // Always include id\n      if (!fields.includes('product.id')) {\n        fields.unshift('product.id');\n      }\n\n      this.queryBuilder.select(fields);\n    }\n\n    return this;\n  }\n\n  paginate(): this {\n    this.page = Number(this.queryString.page) || 1;\n    this.limit = Number(this.queryString.limit) || 10;\n    this.skip = (this.page - 1) * this.limit;\n\n    this.queryBuilder.skip(this.skip).take(this.limit);\n\n    return this;\n  }\n\n  async getManyAndCount(): Promise<[T[], number]> {\n    return await this.queryBuilder.getManyAndCount();\n  }\n\n  async getMany(): Promise<T[]> {\n    return await this.queryBuilder.getMany();\n  }\n}\n"],"names":["ApiFeatures","getPaginationInfo","page","limit","filter","queryObj","queryString","excludedFields","forEach","el","queryStr","JSON","stringify","replace","match","parsedQuery","parse","Object","keys","key","value","operator","operatorValue","queryBuilder","andWhere","sort","sortBy","split","map","field","direction","startsWith","actualField","substring","join","orderBy","limitFields","fields","includes","unshift","select","paginate","Number","skip","take","getManyAndCount","getMany","constructor"],"mappings":"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"}