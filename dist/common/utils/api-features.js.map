{"version":3,"sources":["../../../src/common/utils/api-features.ts"],"sourcesContent":["import { ObjectLiteral, SelectQueryBuilder } from 'typeorm';\r\nimport { ParsedQs } from 'qs';\r\n\r\nexport class ApiFeatures<T extends ObjectLiteral> {\r\n  /**\r\n   * Returns the current pagination information\r\n   * @returns Object containing page and limit\r\n   */\r\n  getPaginationInfo(): { page: number; limit: number } {\r\n    return {\r\n      page: this.page,\r\n      limit: this.limit,\r\n    };\r\n  }\r\n  private page: number;\r\n  private limit: number;\r\n  private skip: number;\r\n\r\n  constructor(\r\n    private queryBuilder: SelectQueryBuilder<T>,\r\n    private queryString: ParsedQs,\r\n  ) {\r\n    this.page = 1;\r\n    this.limit = 10;\r\n    this.skip = 0;\r\n  }\r\n\r\n  filter(): this {\r\n    if (this.queryString.q) {\r\n      const q = (this.queryString.q as string).toLowerCase();\r\n      const words = q.split(/\\s+/).filter(word => word.length >= 3);\r\n      if (words.length > 0) {\r\n        const orConditions: string[] = [];\r\n        const params: Record<string, string> = {};\r\n        words.forEach((word, idx) => {\r\n          const param = `qword${idx}`;\r\n          orConditions.push(`LOWER(product.name) LIKE :${param}`);\r\n          orConditions.push(`LOWER(product.description) LIKE :${param}`);\r\n          orConditions.push(`JSON_UNQUOTE(LOWER(JSON_EXTRACT(product.sizeDetails, '$[*].sizeName'))) LIKE :${param}`);\r\n          orConditions.push(`LOWER(category.name) LIKE :${param}`);\r\n          orConditions.push(`LOWER(subCategory.name) LIKE :${param}`);\r\n          params[param] = `%${word}%`;\r\n        });\r\n        this.queryBuilder.andWhere(`(${orConditions.join(' OR ')})`, params);\r\n      }\r\n    }\r\n\r\n    // Special query for category name\r\n    if (this.queryString.category) {\r\n      const category = (this.queryString.category as string).toLowerCase();\r\n      this.queryBuilder.andWhere('LOWER(category.name) = :category', { category });\r\n    }\r\n    // Special query for subCategory name\r\n    if (this.queryString.subCategory) {\r\n      const subCategory = (this.queryString.subCategory as string).toLowerCase();\r\n      this.queryBuilder.andWhere('LOWER(subCategory.name) = :subCategory', { subCategory });\r\n    }\r\n\r\n    const queryObj = { ...this.queryString };\r\n    const excludedFields = ['page', 'sort', 'limit', 'fields', 'q', 'category', 'subCategory'];\r\n    excludedFields.forEach((el) => delete queryObj[el]);\r\n\r\n    // Advanced filtering\r\n    let queryStr = JSON.stringify(queryObj);\r\n    queryStr = queryStr.replace(\r\n      /\\b(gte|gt|lte|lt|ne)\\b/g,\r\n      (match) => `$${match}`,\r\n    );\r\n    const parsedQuery = JSON.parse(queryStr) as Record<string, any>;\r\n\r\n    Object.keys(parsedQuery).forEach((key) => {\r\n      const value = parsedQuery[key] as Record<string, any>;\r\n      if (typeof value === 'object' && value !== null) {\r\n        Object.keys(value).forEach((operator) => {\r\n          const operatorValue = value[operator] as Record<string, any>;\r\n          switch (operator) {\r\n            case '$gte':\r\n              this.queryBuilder.andWhere(`${key} >= :${key}Gte`, {\r\n                [`${key}Gte`]: operatorValue,\r\n              });\r\n              break;\r\n            case '$gt':\r\n              this.queryBuilder.andWhere(`${key} > :${key}Gt`, {\r\n                [`${key}Gt`]: operatorValue,\r\n              });\r\n              break;\r\n            case '$lte':\r\n              this.queryBuilder.andWhere(`${key} <= :${key}Lte`, {\r\n                [`${key}Lte`]: operatorValue,\r\n              });\r\n              break;\r\n            case '$lt':\r\n              this.queryBuilder.andWhere(`${key} < :${key}Lt`, {\r\n                [`${key}Lt`]: operatorValue,\r\n              });\r\n              break;\r\n            case '$ne':\r\n              this.queryBuilder.andWhere(`${key} != :${key}Ne`, {\r\n                [`${key}Ne`]: operatorValue,\r\n              });\r\n              break;\r\n          }\r\n        });\r\n      } else {\r\n        this.queryBuilder.andWhere(`${key} = :${key}`, { [key]: value });\r\n      }\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  sort(): this {\r\n    if (this.queryString.sort) {\r\n      const sortBy = (this.queryString.sort as string)\r\n        .split(',')\r\n        .map((field) => {\r\n          const direction = field.startsWith('-') ? 'DESC' : 'ASC';\r\n          const actualField = field.startsWith('-')\r\n            ? field.substring(1)\r\n            : field;\r\n          return `product.${actualField} ${direction}`;\r\n        })\r\n        .join(', ');\r\n\r\n      this.queryBuilder.orderBy(sortBy);\r\n    } else {\r\n      // Default sort by creation date\r\n      this.queryBuilder.orderBy('product.createdAt', 'DESC');\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  limitFields(): this {\r\n    if (this.queryString.fields) {\r\n      const fields = (this.queryString.fields as string)\r\n        .split(',')\r\n        .map((field) => `product.${field}`);\r\n\r\n      // Always include id\r\n      if (!fields.includes('product.id')) {\r\n        fields.unshift('product.id');\r\n      }\r\n\r\n      this.queryBuilder.select(fields);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  paginate(): this {\r\n    this.page = Number(this.queryString.page) || 1;\r\n    this.limit = Number(this.queryString.limit) || 10;\r\n    this.skip = (this.page - 1) * this.limit;\r\n\r\n    this.queryBuilder.skip(this.skip).take(this.limit);\r\n\r\n    return this;\r\n  }\r\n\r\n  async getManyAndCount(): Promise<[T[], number]> {\r\n    return await this.queryBuilder.getManyAndCount();\r\n  }\r\n\r\n  async getMany(): Promise<T[]> {\r\n    return await this.queryBuilder.getMany();\r\n  }\r\n}\r\n"],"names":["ApiFeatures","getPaginationInfo","page","limit","filter","queryString","q","toLowerCase","words","split","word","length","orConditions","params","forEach","idx","param","push","queryBuilder","andWhere","join","category","subCategory","queryObj","excludedFields","el","queryStr","JSON","stringify","replace","match","parsedQuery","parse","Object","keys","key","value","operator","operatorValue","sort","sortBy","map","field","direction","startsWith","actualField","substring","orderBy","limitFields","fields","includes","unshift","select","paginate","Number","skip","take","getManyAndCount","getMany","constructor"],"mappings":"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"}