{"version":3,"sources":["../../../src/auth/entities/auth.entity.ts"],"sourcesContent":["import { Entity, PrimaryColumn, Generated, Column, OneToMany } from 'typeorm';\nimport { Exclude } from 'class-transformer';\nimport { Role } from '../../common/constants/roles.constant';\nimport type { order } from '../../order/order.entity';\n\n/**\n * Auth entity representing a user in the system\n */\n@Entity()\nexport class auth {\n  /**\n   * Unique identifier for the user\n   * Using UUID format for better security and global uniqueness\n   */\n  @PrimaryColumn('char', { length: 36 })\n  @Generated('uuid')\n  id: string;\n\n  /**\n   * Unique username for authentication\n   */\n  @Column({ unique: true })\n  username: string;\n\n  /**\n   * Hashed password for authentication\n   * @exclude This field is excluded from serialization\n   */\n  @Column({ nullable: false })\n  @Exclude()\n  password: string;\n\n  /**\n   * Relationship with orders - a user can have multiple orders\n   * Using lazy require pattern to avoid circular dependencies\n   */\n  @OneToMany(\n    () => {\n      // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-unsafe-member-access\n      const OrderEntity = require('../../order/order.entity').order as {\n        new (): order;\n      };\n      return OrderEntity;\n    },\n    (orderEntity: order) => orderEntity.readyBy,\n  )\n  orders: order[];\n\n  /**\n   * User role for authorization\n   */\n  @Column({ type: 'enum', enum: Role, default: Role.Admin })\n  role: Role;\n\n  /**\n   * When the user was created\n   */\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  createdAt: Date;\n\n  /**\n   * When the user was last updated\n   */\n  @Column({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n  })\n  updatedAt: Date;\n}\n"],"names":["auth","length","unique","nullable","OrderEntity","require","order","orderEntity","readyBy","type","enum","Role","default","Admin","onUpdate"],"mappings":";;;;+BASaA;;;eAAAA;;;yBATuD;kCAC5C;+BACH;;;;;;;;;;AAOd,IAAA,AAAMA,OAAN,MAAMA;AA4Db;;;QAvD2BC,QAAQ;;;;;;;QAOvBC,QAAQ;;;;;;QAORC,UAAU;;;;;;;QAUhB,6GAA6G;QAC7G,MAAMC,cAAcC,QAAQ,4BAA4BC,KAAK;QAG7D,OAAOF;IACT,IACCG,cAAuBA,YAAYC,OAAO;;;;;QAOnCC,MAAM;QAAQC,MAAMC,mBAAI;QAAEC,SAASD,mBAAI,CAACE,KAAK;;;;;;QAM7CJ,MAAM;QAAaG,SAAS,IAAM;;;;;;QAO1CH,MAAM;QACNG,SAAS,IAAM;QACfE,UAAU"}