{"version":3,"sources":["../../src/auth/auth.controller.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-member-access */\r\nimport {\r\n  Controller,\r\n  Post,\r\n  Body,\r\n  HttpException,\r\n  HttpStatus,\r\n  HttpCode,\r\n  Get,\r\n  Delete,\r\n  UseGuards,\r\n  Req,\r\n  Param,\r\n  Request,\r\n} from '@nestjs/common';\r\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\r\nimport { AuthService } from './auth.service';\r\nimport { CreateUserDto } from './dto/create-user.dto';\r\nimport { LoginDto, RegisterDto, ChangePasswordDto } from './dto/auth.dto';\r\nimport { UpdateUserDto } from './dto/update-user.dto';\r\nimport { JwtAuthGuard } from '../common/guards/jwt-auth.guard';\r\nimport { RolesGuard } from '../common/guards/roles.guard';\r\nimport { Roles } from '../common/decorators/roles.decorator';\r\nimport { Role } from '../common/constants/roles.constant';\r\n\r\ninterface RequestWithUser extends Request {\r\n  user: { id: string; username: string; role: Role };\r\n}\r\n\r\n@Controller('auth')\r\nexport class AuthController {\r\n  @Post('create-user')\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.SuperAdmin)\r\n  async createUser(\r\n    @Body() createUserDto: CreateUserDto,\r\n    @Req() req: RequestWithUser,\r\n  ) {\r\n    return this.authService.createUser(createUserDto, req.user.id);\r\n  }\r\n\r\n  constructor(private readonly authService: AuthService) {}\r\n\r\n  @Post('register')\r\n  @ApiOperation({ summary: 'User register' })\r\n  @ApiResponse({ status: 201, description: 'register successful' })\r\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\r\n  async register(@Body() dto: RegisterDto) {\r\n    try {\r\n      const result = await this.authService.signUp(dto);\r\n      return {\r\n        statusCode: HttpStatus.CREATED,\r\n        message: 'User registered successfully',\r\n        data: result,\r\n      };\r\n    } catch (err) {\r\n      throw new HttpException(\r\n        err.message,\r\n        err.status || HttpStatus.BAD_REQUEST,\r\n      );\r\n    }\r\n  }\r\n\r\n  @Post('login')\r\n  @ApiOperation({ summary: 'User login' })\r\n  @ApiResponse({ status: 200, description: 'Login successful' })\r\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\r\n  @HttpCode(HttpStatus.OK)\r\n  async login(@Body() dto: LoginDto) {\r\n    try {\r\n      const result = await this.authService.logIn(dto);\r\n      return {\r\n        statusCode: HttpStatus.OK,\r\n        message: 'User logged in successfully',\r\n        data: result,\r\n      };\r\n    } catch (err) {\r\n      throw new HttpException(\r\n        err.message,\r\n        err.status || HttpStatus.UNAUTHORIZED,\r\n      );\r\n    }\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Get('user')\r\n  getProfile(@Req() req: RequestWithUser) {\r\n    return { statusCode: HttpStatus.OK, data: req.user };\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Post('change-password')\r\n  async changePassword(\r\n    @Req() req: RequestWithUser,\r\n    @Body() dto: ChangePasswordDto,\r\n  ) {\r\n    return this.authService.changePassword(req.user.id, dto);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.SuperAdmin)\r\n  @Get('all')\r\n  getAllUsers() {\r\n    return this.authService.getAllUsers();\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.SuperAdmin, Role.Admin)\r\n  @Delete('user/:username')\r\n  deleteUser(@Param('username') username: string) {\r\n    return this.authService.deleteUser(username);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(Role.SuperAdmin)\r\n  @Post('update-user/:userId')\r\n  async updateUser(\r\n    @Req() req: RequestWithUser,\r\n    @Param('userId') userId: string,\r\n    @Body() updateUserDto: UpdateUserDto,\r\n  ) {\r\n    try {\r\n      const updatedUser = await this.authService.updateUserBySuperAdmin(\r\n        req.user,\r\n        userId,\r\n        updateUserDto,\r\n      );\r\n      return {\r\n        statusCode: HttpStatus.OK,\r\n        message: 'User updated successfully',\r\n        data: updatedUser,\r\n      };\r\n    } catch (err) {\r\n      throw new HttpException(\r\n        err.message,\r\n        err.status || HttpStatus.BAD_REQUEST,\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"names":["AuthController","createUser","createUserDto","req","authService","user","id","register","dto","result","signUp","statusCode","HttpStatus","CREATED","message","data","err","HttpException","status","BAD_REQUEST","login","logIn","OK","UNAUTHORIZED","getProfile","changePassword","getAllUsers","deleteUser","username","updateUser","userId","updateUserDto","updatedUser","updateUserBySuperAdmin","constructor","SuperAdmin","summary","description","Admin"],"mappings":"AAAA,6DAA6D;;;;+BA8BhDA;;;eAAAA;;;wBAhBN;yBACmC;6BACd;+BACE;yBAC2B;+BAC3B;8BACD;4BACF;gCACL;+BACD;;;;;;;;;;;;;;;AAOd,IAAA,AAAMA,iBAAN,MAAMA;IACX,MAGMC,WACJ,AAAQC,aAA4B,EACpC,AAAOC,GAAoB,EAC3B;QACA,OAAO,IAAI,CAACC,WAAW,CAACH,UAAU,CAACC,eAAeC,IAAIE,IAAI,CAACC,EAAE;IAC/D;IAIA,MAIMC,SAAS,AAAQC,GAAgB,EAAE;QACvC,IAAI;YACF,MAAMC,SAAS,MAAM,IAAI,CAACL,WAAW,CAACM,MAAM,CAACF;YAC7C,OAAO;gBACLG,YAAYC,kBAAU,CAACC,OAAO;gBAC9BC,SAAS;gBACTC,MAAMN;YACR;QACF,EAAE,OAAOO,KAAK;YACZ,MAAM,IAAIC,qBAAa,CACrBD,IAAIF,OAAO,EACXE,IAAIE,MAAM,IAAIN,kBAAU,CAACO,WAAW;QAExC;IACF;IAEA,MAKMC,MAAM,AAAQZ,GAAa,EAAE;QACjC,IAAI;YACF,MAAMC,SAAS,MAAM,IAAI,CAACL,WAAW,CAACiB,KAAK,CAACb;YAC5C,OAAO;gBACLG,YAAYC,kBAAU,CAACU,EAAE;gBACzBR,SAAS;gBACTC,MAAMN;YACR;QACF,EAAE,OAAOO,KAAK;YACZ,MAAM,IAAIC,qBAAa,CACrBD,IAAIF,OAAO,EACXE,IAAIE,MAAM,IAAIN,kBAAU,CAACW,YAAY;QAEzC;IACF;IAIAC,WAAW,AAAOrB,GAAoB,EAAE;QACtC,OAAO;YAAEQ,YAAYC,kBAAU,CAACU,EAAE;YAAEP,MAAMZ,IAAIE,IAAI;QAAC;IACrD;IAEA,MAEMoB,eACJ,AAAOtB,GAAoB,EAC3B,AAAQK,GAAsB,EAC9B;QACA,OAAO,IAAI,CAACJ,WAAW,CAACqB,cAAc,CAACtB,IAAIE,IAAI,CAACC,EAAE,EAAEE;IACtD;IAKAkB,cAAc;QACZ,OAAO,IAAI,CAACtB,WAAW,CAACsB,WAAW;IACrC;IAKAC,WAAW,AAAmBC,QAAgB,EAAE;QAC9C,OAAO,IAAI,CAACxB,WAAW,CAACuB,UAAU,CAACC;IACrC;IAEA,MAGMC,WACJ,AAAO1B,GAAoB,EAC3B,AAAiB2B,MAAc,EAC/B,AAAQC,aAA4B,EACpC;QACA,IAAI;YACF,MAAMC,cAAc,MAAM,IAAI,CAAC5B,WAAW,CAAC6B,sBAAsB,CAC/D9B,IAAIE,IAAI,EACRyB,QACAC;YAEF,OAAO;gBACLpB,YAAYC,kBAAU,CAACU,EAAE;gBACzBR,SAAS;gBACTC,MAAMiB;YACR;QACF,EAAE,OAAOhB,KAAK;YACZ,MAAM,IAAIC,qBAAa,CACrBD,IAAIF,OAAO,EACXE,IAAIE,MAAM,IAAIN,kBAAU,CAACO,WAAW;QAExC;IACF;IAjGAe,YAAY,AAAiB9B,WAAwB,CAAE;aAA1BA,cAAAA;IAA2B;AAkG1D;;;;mDA1Gc+B;;;;;;;;;;;;;QAWIC,SAAS;;;QACVlB,QAAQ;QAAKmB,aAAa;;;QAC1BnB,QAAQ;QAAKmB,aAAa;;;;;;;;;;;;QAkBzBD,SAAS;;;QACVlB,QAAQ;QAAKmB,aAAa;;;QAC1BnB,QAAQ;QAAKmB,aAAa;;6CACpBf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mDAiCTa;;;;;;;;mDAOAA,gCAAiBG;;;;;;;;;;;mDAOjBH"}