{"version":3,"sources":["../../src/optos/optos.controller.ts"],"sourcesContent":["import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  HttpException,\n  HttpStatus,\n  Param,\n} from '@nestjs/common';\nimport { OptosService } from './optos.token.service';\nimport { OptosShipmentService } from './optos.shipment.service';\nimport { OptosApiService } from './optos.api.services';\n// import { CreateShipmentDto } from './optos.dto';\n\n@Controller('optos')\nexport class OptosController {\n  constructor(\n    private readonly optosService: OptosService,\n    private readonly optosApiService: OptosApiService,\n    private readonly optosShipmentService: OptosShipmentService,\n  ) {}\n\n  @Get('token')\n  async getToken(): Promise<any> {\n    try {\n      return await this.optosService.Login();\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n  @Post('token')\n  async getInfo(@Body('access-token') token: string): Promise<any> {\n    try {\n      if (!token) {\n        throw new HttpException(\n          'Access token is required',\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n      return await this.optosService.userInfo(token);\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  @Post('Shipment')\n  async createShipment(@Body() createshipment: any): Promise<any> {\n    try {\n      return await this.optosShipmentService.createShipment(createshipment);\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n  @Get('city')\n  async getCities(): Promise<any> {\n    try {\n      return await this.optosApiService.Cities();\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n  @Get('businesses')\n  async getBusinesses(): Promise<any> {\n    try {\n      return await this.optosApiService.Businesses();\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n  @Get('BusinessesAddress')\n  async getBusinessesAddress(): Promise<any> {\n    try {\n      return await this.optosApiService.BusinessesAddress();\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n  @Get('city/:area')\n  async getArea(@Param('area') area: number): Promise<any> {\n    try {\n      return this.optosApiService.Area(area);\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n  @Get('shipment')\n  async getShipment(): Promise<any> {\n    try {\n      return this.optosShipmentService.getShipment();\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n  @Get('shipmentType')\n  async getShipmentType(): Promise<any> {\n    try {\n      return this.optosShipmentService.getShipmentType();\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n  @Get('pendingTypes')\n  async getPendingTypes(): Promise<any> {\n    try {\n      return this.optosShipmentService.getPendingTypes();\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  private handleError(error: any): never {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    const message = error.message || 'Failed to get pending types';\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    const status = error.status || HttpStatus.INTERNAL_SERVER_ERROR;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-argument\n    throw new HttpException({ message, status }, status);\n  }\n}\n"],"names":["OptosController","getToken","optosService","Login","error","handleError","getInfo","token","HttpException","HttpStatus","BAD_REQUEST","userInfo","createShipment","createshipment","optosShipmentService","getCities","optosApiService","Cities","getBusinesses","Businesses","getBusinessesAddress","BusinessesAddress","getArea","area","Area","getShipment","getShipmentType","getPendingTypes","message","status","INTERNAL_SERVER_ERROR","constructor"],"mappings":";;;;+BAeaA;;;eAAAA;;;wBAPN;mCACsB;sCACQ;kCACL;;;;;;;;;;;;;;;AAIzB,IAAA,AAAMA,kBAAN,MAAMA;IAOX,MACMC,WAAyB;QAC7B,IAAI;YACF,OAAO,MAAM,IAAI,CAACC,YAAY,CAACC,KAAK;QACtC,EAAE,OAAOC,OAAO;YACd,IAAI,CAACC,WAAW,CAACD;QACnB;IACF;IACA,MACME,QAAQ,AAAsBC,KAAa,EAAgB;QAC/D,IAAI;YACF,IAAI,CAACA,OAAO;gBACV,MAAM,IAAIC,qBAAa,CACrB,4BACAC,kBAAU,CAACC,WAAW;YAE1B;YACA,OAAO,MAAM,IAAI,CAACR,YAAY,CAACS,QAAQ,CAACJ;QAC1C,EAAE,OAAOH,OAAO;YACd,IAAI,CAACC,WAAW,CAACD;QACnB;IACF;IAEA,MACMQ,eAAe,AAAQC,cAAmB,EAAgB;QAC9D,IAAI;YACF,OAAO,MAAM,IAAI,CAACC,oBAAoB,CAACF,cAAc,CAACC;QACxD,EAAE,OAAOT,OAAO;YACd,IAAI,CAACC,WAAW,CAACD;QACnB;IACF;IACA,MACMW,YAA0B;QAC9B,IAAI;YACF,OAAO,MAAM,IAAI,CAACC,eAAe,CAACC,MAAM;QAC1C,EAAE,OAAOb,OAAO;YACd,IAAI,CAACC,WAAW,CAACD;QACnB;IACF;IACA,MACMc,gBAA8B;QAClC,IAAI;YACF,OAAO,MAAM,IAAI,CAACF,eAAe,CAACG,UAAU;QAC9C,EAAE,OAAOf,OAAO;YACd,IAAI,CAACC,WAAW,CAACD;QACnB;IACF;IACA,MACMgB,uBAAqC;QACzC,IAAI;YACF,OAAO,MAAM,IAAI,CAACJ,eAAe,CAACK,iBAAiB;QACrD,EAAE,OAAOjB,OAAO;YACd,IAAI,CAACC,WAAW,CAACD;QACnB;IACF;IACA,MACMkB,QAAQ,AAAeC,IAAY,EAAgB;QACvD,IAAI;YACF,OAAO,IAAI,CAACP,eAAe,CAACQ,IAAI,CAACD;QACnC,EAAE,OAAOnB,OAAO;YACd,IAAI,CAACC,WAAW,CAACD;QACnB;IACF;IACA,MACMqB,cAA4B;QAChC,IAAI;YACF,OAAO,IAAI,CAACX,oBAAoB,CAACW,WAAW;QAC9C,EAAE,OAAOrB,OAAO;YACd,IAAI,CAACC,WAAW,CAACD;QACnB;IACF;IACA,MACMsB,kBAAgC;QACpC,IAAI;YACF,OAAO,IAAI,CAACZ,oBAAoB,CAACY,eAAe;QAClD,EAAE,OAAOtB,OAAO;YACd,IAAI,CAACC,WAAW,CAACD;QACnB;IACF;IACA,MACMuB,kBAAgC;QACpC,IAAI;YACF,OAAO,IAAI,CAACb,oBAAoB,CAACa,eAAe;QAClD,EAAE,OAAOvB,OAAO;YACd,IAAI,CAACC,WAAW,CAACD;QACnB;IACF;IAEQC,YAAYD,KAAU,EAAS;QACrC,+GAA+G;QAC/G,MAAMwB,UAAUxB,MAAMwB,OAAO,IAAI;QACjC,+GAA+G;QAC/G,MAAMC,SAASzB,MAAMyB,MAAM,IAAIpB,kBAAU,CAACqB,qBAAqB;QAC/D,0GAA0G;QAC1G,MAAM,IAAItB,qBAAa,CAAC;YAAEoB;YAASC;QAAO,GAAGA;IAC/C;IArGAE,YACE,AAAiB7B,YAA0B,EAC3C,AAAiBc,eAAgC,EACjD,AAAiBF,oBAA0C,CAC3D;aAHiBZ,eAAAA;aACAc,kBAAAA;aACAF,uBAAAA;IAChB;AAkGL"}