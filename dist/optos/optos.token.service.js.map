{"version":3,"sources":["../../src/optos/optos.token.service.ts"],"sourcesContent":["import { Injectable, HttpException, HttpStatus } from '@nestjs/common';\r\nimport { HttpService } from '@nestjs/axios';\r\n// eslint-disable-next-line @typescript-eslint/no-require-imports\r\nimport FormData = require('form-data');\r\nimport * as dotenv from 'dotenv';\r\ndotenv.config({ path: '.env' });\r\n\r\n@Injectable()\r\nexport class OptosService {\r\n  constructor(private readonly httpService: HttpService) {}\r\n\r\n  async Login(): Promise<any> {\r\n    const clientId = process.env.CLIENT_ID;\r\n    const clientSecret = process.env.CLIENT_SECRET;\r\n    const grantType = process.env.GRANT_TYPE;\r\n    const username = process.env.USERNAME1;\r\n    const password = process.env.PASSWORD;\r\n    const scope = process.env.SCOPE;\r\n\r\n    if (!clientId || !clientSecret || !grantType || !username || !password) {\r\n      const missingVars: string[] = [];\r\n      if (!clientId) missingVars.push('CLIENT_ID');\r\n      if (!clientSecret) missingVars.push('CLIENT_SECRET');\r\n      if (!grantType) missingVars.push('GRANT_TYPE');\r\n      if (!username) missingVars.push('USERNAME');\r\n      if (!password) missingVars.push('PASSWORD');\r\n\r\n      throw new HttpException(\r\n        `Missing required environment variables: ${missingVars.join(', ')}. Please check your .env file.`,\r\n        HttpStatus.INTERNAL_SERVER_ERROR,\r\n      );\r\n    }\r\n\r\n    const data = new FormData();\r\n    data.append('grant_type', grantType);\r\n    data.append('client_id', clientId);\r\n    data.append('client_secret', clientSecret);\r\n    data.append('username', username);\r\n    data.append('password', password);\r\n    if (scope) {\r\n      data.append('scope', scope);\r\n    }\r\n\r\n    const urlLogin = 'https://opost.ps/oauth/token';\r\n\r\n    if (!urlLogin) {\r\n      throw new HttpException(\r\n        'URL_LOGIN configuration is missing',\r\n        HttpStatus.INTERNAL_SERVER_ERROR,\r\n      );\r\n    }\r\n\r\n    try {\r\n      const response = await this.httpService.axiosRef.post(\r\n        urlLogin.trim(),\r\n        data,\r\n        {\r\n          headers: {\r\n            Accept: 'application/json',\r\n            ...data.getHeaders(),\r\n          },\r\n          maxBodyLength: Infinity,\r\n        },\r\n      );\r\n\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n      return response.data.access_token;\r\n    } catch (error) {\r\n      console.error(\r\n        'Error creating token:',\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n        error.response?.data || error.message,\r\n      );\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n      if (error.response?.data?.error === 'invalid_grant') {\r\n        throw new HttpException(\r\n          'Authentication failed: Please check your username and password are correct',\r\n          HttpStatus.UNAUTHORIZED,\r\n        );\r\n      }\r\n      throw new HttpException(\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n        `Failed to create token: ${error.message}`,\r\n        HttpStatus.INTERNAL_SERVER_ERROR,\r\n      );\r\n    }\r\n  }\r\n\r\n  async userInfo(access_token: string): Promise<any> {\r\n    if (!access_token) {\r\n      throw new HttpException(\r\n        'Access token is required',\r\n        HttpStatus.BAD_REQUEST,\r\n      );\r\n    }\r\n\r\n    const urlUserInfo = 'https://opost.ps/api/oauth/user';\r\n\r\n    try {\r\n      const response = await this.httpService.axiosRef.get(urlUserInfo, {\r\n        headers: {\r\n          Authorization: `Bearer ${access_token}`,\r\n          Accept: 'application/json',\r\n        },\r\n        maxBodyLength: Infinity,\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\r\n        'Error fetching user info:',\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n        error.response?.data || error.message,\r\n      );\r\n\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n      if (error.response?.status === 401) {\r\n        throw new HttpException(\r\n          'Invalid or expired access token',\r\n          HttpStatus.UNAUTHORIZED,\r\n        );\r\n      }\r\n\r\n      throw new HttpException(\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n        `Failed to fetch user info: ${error.message}`,\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\r\n        error.response?.status || HttpStatus.INTERNAL_SERVER_ERROR,\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"names":["OptosService","FormData","dotenv","config","path","Login","clientId","process","env","CLIENT_ID","clientSecret","CLIENT_SECRET","grantType","GRANT_TYPE","username","USERNAME1","password","PASSWORD","scope","SCOPE","missingVars","push","HttpException","join","HttpStatus","INTERNAL_SERVER_ERROR","data","append","urlLogin","response","httpService","axiosRef","post","trim","headers","Accept","getHeaders","maxBodyLength","Infinity","access_token","error","console","message","UNAUTHORIZED","userInfo","BAD_REQUEST","urlUserInfo","get","Authorization","status","constructor"],"mappings":"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"}